// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique @db.VarChar(255)
  password String @db.VarChar(255)
  displayName String @db.VarChar(255)
  sentMessage Message[] @relation("SentMessage")
  receivedMessage Message[] @relation("ReceiveMessage")
  friends User[] @relation("friends")
  friendOf User[] @relation("friends")
  groupChats groupChat[]
}

model Message {
  id Int @id @default(autoincrement())
  timestamp DateTime @default(now())
  image Boolean @default(false)
  message String
  senderid Int
  sender User @relation("SentMessage", fields: [senderid],references: [id])
  recipientid Int
  recipient User @relation("ReceiveMessage", fields: [recipientid],references: [id])
}

model groupChat {
  id Int @id @default(autoincrement())
  users User[]
  messsages groupChatMessage[]
}

model groupChatMessage {
  id Int @id @default(autoincrement())
  groupid Int
  group groupChat @relation(fields: [groupid], references: [id], onDelete: Cascade)
  timestamp DateTime @default(now())
  message String
}
